interface Airport {
    code: string;
    friendlyName: string;
    groundCallsign: string;
    towerCallsigns: string[];
    hasGround: boolean;
    defaultTowerFrequency: string;
    defaultGroundFrequency: string;
    maxAcft: string;
    chartPacks: ChartPack[];
    generalInfo: string;
    runwayInfo: Runway[];
    commsInfo: string;
    topDowns?: string[];
}
interface Runway {
    name1: string;
    name2: string;
    width?: number;
    length: number;
    type: "concrete" | "sand" | "grass" | "water";
}
interface ChartPack {
    author: string;
    link: string;
    sids?: SID[];
}
interface SID {
    name: string;
    runways: string[];
    transitions?: string[];
    route?: string;
}
declare function getDefaultAirport(): Airport;
declare function generateAirports(): Airport[];
declare function getAirport(code: string): Airport;
declare function getAirportByName(name: string): Airport | undefined;
export { getAirport as findAirport, generateAirports, getAirportByName, getDefaultAirport, type Airport, type ChartPack };
